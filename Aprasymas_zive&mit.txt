    mit2zive skriptų aprašymas

#   Aplankų schema
#
#------------------------------ mit2zive_create --------------------------------------------------------
#   |
# db_path = Duomenu_aplankas\db_folder
#   |
#   ----- rec_dir = db_path\'record': *.npy, *.json, all_beats_attr.csv
#   |
#   |
#   |
#----------------------------- mit2zive_prep --------------------------------------------------------
#   |
#   |
#   ----- SCHEMA_PATH = db_path\SCHEMA_FOLDER: train_ind_lst.csv, validate_ind_lst.csv
#               | 
#               ----- sets_path = SCHEMA_PATH\sets_folder: train_set.npz, validate_set.npz
#                         |
#              
#                         | 
#----------------------------- mit2zive_classif --------------------------------------------------------
#                         | 
#                         | 
#                         ----- model_dir = SCHEMA_PATH\'saved_model' 
#                         |          |   
#                         |          ----- model_dir\model_folder: info_classif.json 
#                         |           
#                         |          
#----------------------------- mit2zive_accuracy --------------------------------------------------------
#                         | 
#                         | 
#                         ----- images_dir = SCHEMA_PATH\'saved_images'
#                                   |  
#                                    ----- images_dir\images_folder
#                                
#                              
#                              
# 
# 
#  kur, yra užduodami, kaip pvz.:
#       Duomenu_aplankas = 'C:\DI\VSC\ECG\ziveio\A_DATA'
#       db_folder = 'mit2zive-arrhythmia-database-1.0.0'
#       seq_folder = 'seq_30_70_v0'
#       SCHEMA_FOLDER = 'zive_tst1_2_100_43
#       model_folder = 'CNN', 'MLP'
#       images_folder = 'CNN', 'MLP'
#
# 
# 
# 
# 
#
#   Apibendrintas vaizdas
#   
# db_path = Duomenu_aplankas\'ZIVE&MIT'
#   |
#   -----  rec_dir = db_path\'records': *.npy, *.json, info_create.json, all_beats_attr.csv
#   |
#   ----- SCHEMA_PATH = db_path\'schema_NSV_43_nbal: train_ind_lst.csv, validate_ind_lst.csv 
#   |         |
#   |         ----- sets_path = SCHEMA_PATH\'sets_L60_R80': train_set.npz, validate_set.npz
    |                   |
#   |                   ----- model_dir = sets_path\'saved_model'
#                       |
#   |                   ----- images_dir = sets_path\'saved_images'
#   |
#    ----- SCHEMA_PATH = db_path\'schema_NSV_43_bal: train_ind_lst.csv, validate_ind_lst.csv 
#             |
#             ----- sets_path = SCHEMA_PATH\'sets_L60_R80': train_set.npz, validate_set.npz
#                       |
#                       ----- model_dir = sets_path\'saved_model'
#                       |
#                       ----- images_dir = sets_path\'saved_images'        
#

# Bendras duomenų aplankas, kuriame yra patalpintassubfolderis name_db

mit2zive_create
Skriptas sukuria zive duomenų analogą iš MIT duomenų, į sub-aplanką rec_dir įrašomi
transformuoti EKG įrašai *.npa ir anotacijų failai *.json. Anotacijų failuose paliktos 
iš MIT tik anotacijos N,L,R,e,j,V,E,S,A,a,J,F, visas kitas perpavadiname į 'Q' 
Pagrindinis sukūriamas aplankas - db_path = pvz. 'mit2zive-arrhythmia-database-1.0.0'.


mit2zive_prep
Panaudojant sekas ir jų atributus, paruošiami duomenys klasifikatoriaus darbui.
Suformuojamos klasės, jų imtys mokymui ir vertinimui, failai info_prep.json, labels.json, partition.json,
kuriuos naudoja klasifikavimo scriptas.
Tai galutinė vieta,kur paruošiami duomenys klasifikatoriui, į info.txt reikia įdėti aprašymą,
tai faktiškai SCHEMA_PATH aprašymas
Pagrindinis sukūriamas aplankas SCHEMA_PATH, pvz. 'zive_tst2_2_100_12

mit2zive_classif
Pagrindinis sukūriamas aplankas model_dir


mit2zive_analize
Pagrindinis sukūriamas aplankas model_dir






Pagrindinės interpacientinės schemos:

ZIVE&MIT 


Variantas set, kai klasifikavimui skirtos sekų imtys (sets) patalpinamos į numpy masyvus arba 'kerpamos' skaičiavimo metu

1_mit2zive_creat_v1.ipynb  - sukuria zive duomenų analogą iš MIT duomenų, sukuriami įrašai *.npa ir anotacijų failai *.json.
Sutvarkyta

2_mit2zive_creat_beats_attrib_v1.ipynb - sukuria all_beats_attr, freime nebėra Q ir F, visos anotacijos
sugrupuotos į N,S,V, suformuoja label, RRl, RRr 
Sutvarkyta

3_mit2zive_prep_ind_v3_1_nbal.ipynb - Paruošia pūpsnių indeksus ML mokymui ir vertinimui 
train_ind_lst ir validate_ind_lst ir įrašo juos į diską. Nebalansuotas variantas.
Ruošiant indeksus praleidžia užduotą kiekį pūpsnių kiekvieno EKG įrašo pradžioje ir pabaigoje.
Sutvarkyta 


3_mit2zive_prep_ind_v3_2_bal.ipynb - balansuoja duomenis - sumažina N užduotu procentu mokymo ir vertinimo imtyje



4_mit2zive_classif_set_v2L.ipynb



5_mit2zive_accuracy_set_v2.ipynb




Testavimui:
0_mit2zive_testing_set.ipynb

ZIVE

0_zive_collect_list_v1.ipynb - surenka duomenis iš buferio (į kurį nusikraunami duomenys iš serverio) ir papildo pagrindinę vietinę EKG saugyklą

0_zive_collect_list_v1.ipynb - analizuoja tiek records, tiek records_selected (reikia nurodyti)

0_zive_select_records_v1.ipynb - atrenka paciento įrašus pagal tam tikrą algoritmą 

0_zive_collect_jungtinis_v1.ipynb: apjungia 0_zive_collect_list, 0_zive_collect_list, 0_zive_select_records

0_zive_mit2zive_plus_zive_prep_v1.ipynb - apjungia zive ir mit2zive duomenis

1_ziveo_visual_matplot_noise_pred_v1.ipynb

1_ziveo_visual_matplot_noise_v1.ipynb

1_ziveo_visual_matplot_v1.ipynb

2_mit2zive_creat_attrib_agr_v1.ipynb - mit2zive EKG įrašuose esančių pūpsnių atributų sukūrimui,
kad būtų galima juos panaudoti sekų formavimui. 

2_zive_prep_agr_v3_1_nbal.ipynb


5_zive_accuracy_v2.ipynb



Šifravimas:

'mit2zive_agr_3_140_43_bal_v2_92' - agr:duomenys interpacientinei schemai, 3 klasės, lango plotis: 140,
iš 43 paciento įrašų, duomenys balansuoti (v2: balansuotos mokymo ir vertinimo imtys), balansuojant
nuimta 92 procentai N sekų


